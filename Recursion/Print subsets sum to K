/*Given an array A and an integer K, print all subsets of A which sum to K.
Subsets are of length varying from 0 to n, that contain elements of the array. But the order of elements should remain same as in the input array.
Note : The order of subsets are not important. Just print them in different lines.
Input format :
Line 1 : Size of input array
Line 2 : Array elements separated by space
Line 3 : K 
Sample Input:
9 
5 12 3 17 1 18 15 3 17 
6
Sample Output:
3 3
5 1*/
package Recursion2;

public class PrintSubsetsSumtoK {
	private static void printsubsets(int input[],int si,int k,int output[]){
        if(si==input.length){
        	if(k==0) {
                for(int i=0;i<output.length;i++){
                 System.out.print(output[i]+" ");
                 }
                 System.out.println();
                 return;}
            else
            	return;
            }
            
            int[] newout=new int[output.length+1];
            for(int j=0;j<output.length;j++) {
            	newout[j]=output[j];
            }
            newout[output.length]=input[si];
       
            printsubsets(input,si+1,(k-input[si]),newout);
            printsubsets(input,si+1,k,output);
            
        }

    
    public static void printSubsets(int input[],int k) {
		int[] output= {};
        printsubsets(input,0,k,output);

	}
	
	
	public static void main(String[] args) {
		int[] input= {3,2,5,1,4,6};
		printSubsets(input,8);
	}

}
