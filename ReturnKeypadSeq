/*Given an integer n, using phone keypad find out all the possible strings that can be made using digits of input n.
Return empty string for numbers 0 and 1.
Note : 1. The order of strings are not important.
2. Input and output has already been managed for you. You just have to populate the output array and return the count of elements populated in the output array.
INPUT FORMAT
integer n
OUTPUT FORMAT
All possible strings in different lines
CONSTRAINTS
1 <= n <= 10^6
SAMPLE INPUT
23
SAMPLE OUTPUT
ad
ae
af
bd
be
bf
cd
ce
cf
CODE*/
package Recursion2;

public class Keypadsequence {

	private static String helper(int keys) {
		String helper[]= {"","","abc","def","ghi","jkl","mno","pqrs","tuv","wxyz"};
		return helper[keys];
	}
	
	public static String[] keypadseq(int num) {
		if(num==0) {
			String ans[]={""};
			return ans;
		}
		int rem=num%10;
		num=num/10;
		String smallans[]=keypadseq(num);
		String keys=helper(rem);
		String[] ans=new String[keys.length()*smallans.length];
		int k=0,j=0;
		while(k<smallans.length) {
		for(int i=0;i<ans.length;i++) {
			ans[i]=smallans[k]+keys.charAt(j);
			j++;
			if(j==keys.length()) 
			{k++;
			 j=0;
			}
		}
		}
	return ans;		
	}
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
	      int num=23;
	      String ans[]=keypadseq(num);
	      for(int j=0;j<ans.length;j++) {
	    	  System.out.println(ans[j]);
	      }
	      
		}

}

