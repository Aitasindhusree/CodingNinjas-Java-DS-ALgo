package stacks;

import LS.Node;

public class stackUsingLL<T> {


	    private Node<T> head;
	    private int size;

	    public stackUsingLL() {
	        head=null;
	        size=0;
	    }

	    public int getSize() { 
	        return size;
	    }

	    public boolean isEmpty() {
	        if(head==null){
	            return true;
	        }
	        else
	            return false;
	    }

	    public void push(T element) {
	        Node<T> temp=new Node<T>(element);
	        
	        if(head==null){
	            head=temp;
	            head.next=null;
	            size++;
	        }
	        else{
	            temp.next=head;
	            head=temp;
	            size++;
	        }
	    }

	    public T pop() throws stackEmptyException {
	        if(size==0){
	            throw new stackEmptyException();
	        }
	        else{
	        	T element=head.data;
	        	head=head.next;
		        size--;
		        return element;
	        }
	        
	    }

	    public T top() throws stackEmptyException {
	        if(size==0) {throw new stackEmptyException();}
	        else{return head.data;}
	    }}
